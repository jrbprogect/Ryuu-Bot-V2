const os = require('os');

const gothicFont = {
  A: "ùñ†", B: "ùñ°", C: "ùñ¢", D: "ùñ£", E: "ùñ§", F: "ùñ•", G: "ùñ¶", H: "ùñß", I: "ùñ®", J: "ùñ©", K: "ùñ™", L: "ùñ´", M: "ùñ¨", N: "ùñ≠", O: "ùñÆ", P: "ùñØ", Q: "ùñ∞", R: "ùñ±",
  S: "ùñ≤", T: "ùñ≥", U: "ùñ¥", V: "ùñµ", W: "ùñ∂", X: "ùñ∑", Y: "ùñ∏", Z: "ùñπ", 
  a: "ùñ∫", b: "ùñª", c: "ùñº", d: "ùñΩ", e: "ùñæ", f: "ùñø", g: "ùóÄ", h: "ùóÅ", i: "ùóÇ",
  j: "ùóÉ", k: "ùóÑ", l: "ùóÖ", m: "ùóÜ", n: "ùóá", o: "ùóà", p: "ùóâ", q: "ùóä", r: "ùóã",
  s: "ùóå", t: "ùóç", u: "ùóé", v: "ùóè", w: "ùóê", x: "ùóë", y: "ùóí", z: "ùóì",
  0: "ùü¢", 1: "ùü£", 2: "ùü§", 3: "ùü•", 4: "ùü¶", 5: "ùüß", 6: "ùü®", 7: "ùü©", 8: "ùü™", 9: "ùü´"
};

const applyGothicFont = (text) => {
    return text.split('').map(char => gothicFont[char] || char).join('');
};

const formatUptime = (uptime) => {
    const days = Math.floor(uptime / (24 * 60 * 60 * 1000));
    uptime %= 24 * 60 * 60 * 1000;
    const hours = Math.floor(uptime / (60 * 60 * 1000));
    uptime %= 60 * 60 * 1000;
    const minutes = Math.floor(uptime / (60 * 1000));
    uptime %= 60 * 1000;
    const seconds = Math.floor(uptime / 1000);

    return `${days}day(s) ${hours}hour(s) ${minutes}minute(s) ${seconds} second(s)`;
};

const getSystemStats = () => {
    const cpuUsage = (process.cpuUsage().user / 1000000).toFixed(1) + '%';
    const totalMemory = 150;
    const memoryUsage = (process.memoryUsage().rss / (1024 * 1024)).toFixed(2) + ' MB';
    const cores = os.cpus().length;
    const platform = os.platform();
    const arch = os.arch();
    const ping = '1ms';

    return {
        cpuUsage,
        memoryUsage,
        totalMemory: `${totalMemory} GB`,
        cores,
        platform,
        arch,
        ping,
    };
};

module.exports = {
    name: "uptime",
    description: "information and uptime.",
    prefixRequired: false,
    adminOnly: false,
    async execute(api, event, args) {
        const uptime = process.uptime() * 1000;
        const formattedUptime = formatUptime(uptime);

        const { cpuUsage, memoryUsage, totalMemory, cores, platform, arch, ping } = getSystemStats();

        const uptimeMessage = `
${applyGothicFont('Running for')} ${applyGothicFont(formattedUptime)}.

‚ùñ ${applyGothicFont('Cpu usage:')} ${applyGothicFont(cpuUsage)}
‚ùñ ${applyGothicFont('Ram usage:')} ${applyGothicFont(memoryUsage)} / ${applyGothicFont(totalMemory)}
‚ùñ ${applyGothicFont('Cores:')} ${applyGothicFont(cores.toString())}
‚ùñ ${applyGothicFont('Ping:')} ${applyGothicFont(ping)}
‚ùñ ${applyGothicFont('Operating System Platform:')} ${applyGothicFont(platform)}
‚ùñ ${applyGothicFont('System CPU Architecture:')} ${applyGothicFont(arch)}
`;

        await api.sendMessage(uptimeMessage, event.threadID, event.messageID);
    },
};